[
  {
    "objectID": "example_2.html",
    "href": "example_2.html",
    "title": "Example #2",
    "section": "",
    "text": "..template..to be continued."
  },
  {
    "objectID": "example_2.html#section-1",
    "href": "example_2.html#section-1",
    "title": "Example #2",
    "section": "Section 1",
    "text": "Section 1\n\n# use clean install of conda on machine in private space \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda -V\n# all those envs explained on Set Up page\nconda activate bacterial-genomics-tutorial-sw7\nconda deactivate\n\nconda 24.1.2"
  },
  {
    "objectID": "example_2.html#section-2",
    "href": "example_2.html#section-2",
    "title": "Example #2",
    "section": "Section 2",
    "text": "Section 2"
  },
  {
    "objectID": "example_2.html#bug-note",
    "href": "example_2.html#bug-note",
    "title": "Example #2",
    "section": "Bug note",
    "text": "Bug note\n\n# With Quarto, the strange bug means that if an {r} executable block is included\n# then the preceding {zsh} or {bash} blocks are executed, otherwise not!\n# Simply include this and all is executed as desired."
  },
  {
    "objectID": "example_1.html",
    "href": "example_1.html",
    "title": "Example #1",
    "section": "",
    "text": "In short, a complete workflow from Illumina reads to genome assembly, through annotation and comparative genomics.\nThis example uses just the Illumina data (https://www.ebi.ac.uk/ena/browser/view/ERR3335404) generated for the study “Whole genome sequence of Mycobacterium ulcerans CSURP7741, a French Guyana clinical isolate” (https://www.ebi.ac.uk/ena/browser/view/PRJEB30628), “P7741” as a short identity code. Mycobacterium ulcerans is an environmental non-tuberculous mycobacterium responsible for Buruli ulcer.\nOne reference genome paper is “Complete genome sequence of the frog pathogen Mycobacterium ulcerans ecovar Liflandii” and it’s sequence https://www.ncbi.nlm.nih.gov/nuccore/NC_020133. Mycobacterium ulcerans liflandii 128FXT, complete sequence has NCBI Reference Sequence: NC_020133.1 and is refered to as just “Liflandii” (sequence stored as ./genomes/Liflandii.fasta). Other reference genomes of Mycobacterium ulcerans are utilized in the workflow (Agy99, SGL03 and Shinsuense) and one of Mycobacterium tuberculosis (H37Rv). This work is based upon the excellent presentations and analysis demonstrated by Vincent Appiah (vincentappiah, link) and Daren Ginete (link). The work has been reproduced, adapted and extended in order that it works on a Mac laptop with updated versions of analysis software available in February 2024 and using the Quarto package for presentation and re-usability."
  },
  {
    "objectID": "example_1.html#conda-env-data-download-qc-reports",
    "href": "example_1.html#conda-env-data-download-qc-reports",
    "title": "Example #1",
    "section": "Conda env, data download, QC reports",
    "text": "Conda env, data download, QC reports\ndownload data and QC of raw Illumina with fastqc\n\n# use clean install of conda on machine in private space \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda -V\n# all those envs explained on Set Up page\nconda env list\nconda activate bacterial-genomics-tutorial-sw7\n# uncomment appropriately to re-run\n# download data to data \n# chmod +x download_data.sh\n# ./download_data.sh\n# run fastqc\n# mkdir QC_RAW_READS\n# fastqc data/*.fastq.gz -o QC_RAW_READS\n\n# show the raw data\nls -lh data/ | perl -nae 'print \"@F[4..8]\\n\"'\n\nconda deactivate\n\nconda 24.1.2\n# conda environments:\n#\nbase                  *  /Users/sw/anaconda3\nbacterial-genomics-tutorial-sw1     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw1\nbacterial-genomics-tutorial-sw2     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw2\nbacterial-genomics-tutorial-sw3     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw3\nbacterial-genomics-tutorial-sw4     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw4\nbacterial-genomics-tutorial-sw5     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw5\nbacterial-genomics-tutorial-sw7     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7\nexample                  /Users/sw/anaconda3/envs/example\nfor_drep                 /Users/sw/anaconda3/envs/for_drep\njust_quast               /Users/sw/anaconda3/envs/just_quast\n\n    \n40M Feb 23 16:02 P7741_R1.fastq.gz\n45M Feb 23 16:02 P7741_R2.fastq.gz\n\n\n\n\n\nClick on links to get the full reports\n\n\nResults files are QC html reports.\n./QC_RAW_READS/P7741_R1_fastqc.html\n./QC_RAW_READS/P7741_R2_fastqc.html"
  },
  {
    "objectID": "example_1.html#trimming-and-post-trim-qc-reports",
    "href": "example_1.html#trimming-and-post-trim-qc-reports",
    "title": "Example #1",
    "section": "Trimming and post trim QC reports",
    "text": "Trimming and post trim QC reports\nUsing Trimmomatic: A flexible read trimming tool for Illumina NGS data from Björn Usadel lab (hallöchen!). Alternative is Sickle (A windowed adaptive trimming tool for FASTQ files using quality)\n\n# use clean install of conda on machine in private space \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\n# uncomment appropriately to re-run\n\n# mkdir trimmed_reads\nread1=data/P7741_R1.fastq.gz\nread2=data/P7741_R2.fastq.gz\nOutputForwardPaired=trimmed_reads/P7741_R1.fastq.gz    \nOutputForwardUnpaired=trimmed_reads/P7741_unpaired_R1.fastq.gz\nOutputReversePaired=trimmed_reads/P7741_R2.fastq.gz\nOutputReverseUnpaired=trimmed_reads/P7741_unpaired_R2.fastq.gz\nthreads=4\n\n# trimmomatic PE -threads $threads $read1 $read2 \\\n# $OutputForwardPaired $OutputForwardUnpaired \\\n# $OutputReversePaired $OutputReverseUnpaired \\\n# ILLUMINACLIP:TruSeq3-PE.fa:2:30:10:8:true HEADCROP:3 TRAILING:10 MINLEN:25\n\n# mkdir QC_TRIMMED_READS\n# fastqc trimmed_reads/* -o QC_TRIMMED_READS\n\nls -1 QC_TRIMMED_READS\n\nconda deactivate\n\nP7741_R1_fastqc.html\nP7741_R1_fastqc.zip\nP7741_R2_fastqc.html\nP7741_R2_fastqc.zip\nP7741_unpaired_R1_fastqc.html\nP7741_unpaired_R1_fastqc.zip\nP7741_unpaired_R2_fastqc.html\nP7741_unpaired_R2_fastqc.zip\n\n\nResults files are QC html reports. vincentappiah’s results are different around 16:29. In video he speaks of sickle trimming, but the code uses trimmomatic.\n./QC_TRIMMED_READS/P7741_R1_fastqc.html\n./QC_TRIMMED_READS/P7741_R2_fastqc.html\n./QC_TRIMMED_READS/P7741_unpaired_R1_fastqc.html\n./QC_TRIMMED_READS/P7741_unpaired_R2_fastqc.html"
  },
  {
    "objectID": "example_1.html#assembly",
    "href": "example_1.html#assembly",
    "title": "Example #1",
    "section": "Assembly",
    "text": "Assembly\nusing SPAdes - St. Petersburg genome assembler (SPAdes)\n\n# Real problems setting up spades with conda - notes on Set Up page\n# Solution was to get the spades Mac binaries\n#\n# It runs but takes quite some time on my mini-server\n# Therefore delete directory\n# P7741_SPADES_OUT\n# and re-run if needed\n# ~/SPAdes-3.15.5-Darwin/bin/spades.py --careful -o P7741_SPADES_OUT -1 trimmed_reads/P7741_R1.fastq.gz -2 trimmed_reads/P7741_R2.fastq.gz\n\necho \"number of contigs\"\ngrep '&gt;' P7741_SPADES_OUT/contigs.fasta | wc -l\necho \"\"\necho \"number of scaffolds\"\ngrep '&gt;' P7741_SPADES_OUT/scaffolds.fasta | wc -l\necho \"\"\n\necho \"directory listing\"\nls -1 P7741_SPADES_OUT\n\nnumber of contigs\n    3243\n\nnumber of scaffolds\n    3232\n\ndirectory listing\nK21\nK33\nK55\nK77\nassembly_graph.fastg\nassembly_graph_after_simplification.gfa\nassembly_graph_with_scaffolds.gfa\nbefore_rr.fasta\ncontigs.fasta\ncontigs.paths\ncorrected\ndataset.info\ninput_dataset.yaml\nmisc\nmismatch_corrector\nparams.txt\npipeline_state\nrun_spades.sh\nrun_spades.yaml\nscaffolds.fasta\nscaffolds.paths\nspades.log\ntmp\nwarnings.log"
  },
  {
    "objectID": "example_1.html#polishing",
    "href": "example_1.html#polishing",
    "title": "Example #1",
    "section": "Polishing",
    "text": "Polishing\nwith\n\nbwa (alignment via Burrows-Wheeler transformation)\nsamtools (for manipulating high-throughput sequencing data)\npilon (automatically improve draft assemblies and find variation among strains including large event detection)\n\nUse script to do 4 rounds (not guaranteed to be optimal) of polishing. Runs but takes quite some time on my mini-server but it goes.\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\n# To clean re-run delete dir polishing_process\n# re-run script\n# ./polish.sh\n\n# list out the files developed \nfind polishing_process\n\nconda deactivate\n\npolishing_process\npolishing_process/pilon_stage4.changes\npolishing_process/pilon_stage1.fasta.ann\npolishing_process/pilon_stage3.fasta.amb\npolishing_process/pilon_stage3.fasta.bwt\npolishing_process/stage1.pilon\npolishing_process/pilon_stage1.fasta\npolishing_process/pilon_stage3.fasta\npolishing_process/raw_assembly.fasta.ann\npolishing_process/mapping3.sorted.bam\npolishing_process/stage3.pilon\npolishing_process/pilon_stage4.fasta\npolishing_process/mapping4.sorted.bam\npolishing_process/pilon_stage2.fasta.amb\npolishing_process/stage4.pilon\npolishing_process/raw_assembly.fasta\npolishing_process/pilon_stage2.fasta.bwt\npolishing_process/raw_assembly.fasta.pac\npolishing_process/raw_assembly.fasta.sa\npolishing_process/pilon_stage2.fasta\npolishing_process/pilon_stage1.fasta.pac\npolishing_process/stage2.pilon\npolishing_process/mapping1.sorted.bam\npolishing_process/pilon_stage1.fasta.sa\npolishing_process/pilon_stage3.fasta.ann\npolishing_process/pilon_stage1.fasta.amb\npolishing_process/mapping1.sorted.bam.bai\npolishing_process/mapping2.sorted.bam\npolishing_process/pilon_stage1.fasta.bwt\npolishing_process/pilon_stage3.changes\npolishing_process/raw_assembly.fasta.bwt\npolishing_process/pilon_stage2.fasta.pac\npolishing_process/pilon_stage2.changes\npolishing_process/raw_assembly.fasta.amb\npolishing_process/pilon_stage2.fasta.ann\npolishing_process/pilon_stage3.fasta.sa\npolishing_process/pilon_stage2.fasta.sa\npolishing_process/mapping2.sorted.bam.bai\npolishing_process/pilon_stage3.fasta.pac\npolishing_process/mapping3.sorted.bam.bai\npolishing_process/mapping4.sorted.bam.bai\npolishing_process/pilon_stage1.changes"
  },
  {
    "objectID": "example_1.html#qc-of-assembly",
    "href": "example_1.html#qc-of-assembly",
    "title": "Example #1",
    "section": "QC of Assembly",
    "text": "QC of Assembly\nusing quast with results linked in below\n\n# conda\nsource ~/anaconda3/etc/profile.d/conda.sh\n\n# env just with the quast software\nconda activate just_quast\n\n# genomes dir taken from vincentappiah repo\n# quast throws an error with default script\n# -t 1 solves \n# other potential issue may exist as the install of quast was not completed...\n# see SetUp page\n\n# uncomment to run again\n# mkdir QC_ASSEMBLY\n# quast.py -t 1 -o QC_ASSEMBLY -R genomes/Liflandii.fasta P7741_SPADES_OUT/scaffolds.fasta P7741.polished.fasta\n\n# Results notes\n# N50 quality didn't change with polishing, GC% didn't change,\n# Slight change in misassemblies \n\n# list out the top dir \nls -1 QC_ASSEMBLY\n\nconda deactivate\n\naligned_stats\nbasic_stats\ncontigs_reports\ngenome_stats\nicarus.html\nicarus_viewers\nquast.log\nreport.html\nreport.pdf\nreport.tex\nreport.tsv\nreport.txt\ntransposed_report.tex\ntransposed_report.tsv\ntransposed_report.txt\n\n\n\nQuality Assessment Tool for Genome Assemblies (QUAST)\n\nQC_ASSEMBLY/report.html\n\n\nIcarus QUAST Contig Browser\nQC_ASSEMBLY/icarus.html\nQC_ASSEMBLY/icarus_viewers/contig_size_viewer.html\n\nQC_ASSEMBLY/icarus_viewers/alignment_viewer.html"
  },
  {
    "objectID": "example_1.html#reorder-contigs",
    "href": "example_1.html#reorder-contigs",
    "title": "Example #1",
    "section": "Reorder contigs",
    "text": "Reorder contigs\nusing ragtag\napart from the paper listed below, there is a more recent publication\nAutomated assembly scaffolding using RagTag elevates a new tomato system for high-throughput genome editing\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\n# genomes/Agy99.fasta is NC_008611.1 Mycobacterium ulcerans Agy99, complete sequence\n# note this is a different genome to genomes/Liflandii.fasta\n\nragtag.py -c\n\n# uncomment to re-run\n## ragtag.py scaffold genomes/Agy99.fasta P7741.polished.fasta -o P7741_reordered\n\n# Extract the reordered contig with a custom (modified!) python script\n# The scripts accept name of the ragtag file containing the reordered contigs \n# and accession number for the reference genome\n\npython extract_reordered.py P7741_reordered/ragtag.scaffold.fasta NC_008611.1\n\n# at this stage vincentappiah gets length of 5291728 \n# and a gc of 64.98\n# potentially the difference is due to newer version of ragtag\n# i.e. v1.0.2 vs RagTag v2.1.0\n\nconda deactivate\n\n\nAlonge, Michael, et al. \"RaGOO: fast and accurate reference-guided scaffolding of draft genomes.\"\nGenome biology 20.1 (2019): 1-17.\nhttps://doi.org/10.1186/s13059-019-1829-6\n    \nGC Percent, opt=ignore: 65.073454\nGC Percent, opt=remove: 65.701833\nGC Percent, opt=weighted: 65.551660\nSequence Length: 5012494 bp\ndraft genome sequence extracted"
  },
  {
    "objectID": "example_1.html#multi-locus-sequence-typing-mlst-and-antibiotic-resistance",
    "href": "example_1.html#multi-locus-sequence-typing-mlst-and-antibiotic-resistance",
    "title": "Example #1",
    "section": "Multi-Locus Sequence Typing (MLST) and Antibiotic Resistance",
    "text": "Multi-Locus Sequence Typing (MLST) and Antibiotic Resistance\nusing https://github.com/tseemann/mlst and https://github.com/tseemann/abricate\nThe results show the expected identity (7 alleles of mycobacteria) and there is an antibiotic resistance gene.\nBut need to use cgMLST, wgMLST and more…\nNeed to look at “chewBBACA is a comprehensive pipeline including a set of functions for the creation and validation of whole genome and core genome MultiLocus Sequence Typing (wg/cgMLST) schemas..”\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\necho \"Alleles\"\necho \"\"\nmlst --csv P7741.reordered.fasta &gt; mlst.csv\n\necho \"\"\necho \"Antibiotic resistance\"\necho \"\"\nabricate P7741.reordered.fasta &gt; amr.summary.tab\ncat amr.summary.tab\n\nconda deactivate\n\nAlleles\n\n[11:36:52] This is mlst 2.23.0 running on darwin with Perl 5.030003\n[11:36:52] Checking mlst dependencies:\n[11:36:52] Found 'blastn' =&gt; /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7/bin/blastn\n[11:36:52] Found 'any2fasta' =&gt; /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7/bin/any2fasta\n[11:36:52] Found blastn: 2.15.0+ (002015)\n[11:36:52] Excluding 3 schemes: abaumannii ecoli vcholerae_2\n[11:36:54] Found exact allele match mycobacteria_2.S7-10\n[11:36:54] Found exact allele match mycobacteria_2.L16-450\n[11:36:54] Found exact allele match mycobacteria_2.S12-394\n[11:36:54] Found exact allele match mycobacteria_2.L19-11\n[11:36:54] Found exact allele match mycobacteria_2.S19-13\n[11:36:54] Found exact allele match mycobacteria_2.L35-10\n[11:36:54] Found exact allele match mycobacteria_2.S14Z-10\n[11:36:54] mlst also supports --json output for the modern bioinformatician.\n[11:36:54] Done.\n\nAntibiotic resistance\n\nUsing nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: P7741.reordered.fasta\nFound 1 genes in P7741.reordered.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\n#FILE   SEQUENCE    START   END STRAND  GENE    COVERAGE    COVERAGE_MAP    GAPS    %COVERAGE   %IDENTITY   DATABASE    ACCESSION   PRODUCT RESISTANCE\nP7741.reordered.fasta   P7741   1110389 1110934 -   aac(2')-Ic  1-546/546   ========/====== 2/2 99.82   82.27   ncbi    NG_047229.1 aminoglycoside N-acetyltransferase AAC(2')-Ic   GENTAMICIN;TOBRAMCYIN"
  },
  {
    "objectID": "example_1.html#rapid-prokaryotic-genome-annotation",
    "href": "example_1.html#rapid-prokaryotic-genome-annotation",
    "title": "Example #1",
    "section": "Rapid prokaryotic genome annotation",
    "text": "Rapid prokaryotic genome annotation\nusing https://github.com/tseemann/prokka also from Torsten Seemann\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\ncpus=4\n# uncomment to re-run\n# ran is around 10 minutes with 4 cores\n#prokka --cpus $cpus --kingdom Bacteria --locustag P7741 --outdir P7741_annotation --prefix P7741 --addgenes P7741.reordered.fasta\n\n# stats\necho \"Summary\"\ncat P7741_annotation/P7741.txt \necho \"\"\n\n# get some counts of genome features\n# vincentappiah numbers differ for reason speculated over in above sections\necho \"Another bespoke summary\"\npython get_annot_stats.py P7741_annotation P7741\necho \"\"\n\n# show first 3 protein sequences\necho \"First 3 protein sequences\"\nhead -13 P7741_annotation/P7741.faa\necho \"\"\n\n# show some 3 genes/CDS\necho \"First 3 genes / CDS\"\nhead -7 P7741_annotation/P7741.tsv\necho \"\"\n\n# show some pseudogenes\necho \"Some pseudogenes\"\n./get_pseudo.pl P7741_annotation/P7741.faa &gt; P7741_annotation/P7741.pseudo.txt\nhead -10 P7741_annotation/P7741.pseudo.txt\necho \"....\"\n\nconda deactivate\n\nSummary\norganism: Genus species strain \ncontigs: 1\nbases: 5012494\nCDS: 4805\ngene: 4852\nrRNA: 3\ntRNA: 43\ntmRNA: 1\n\nAnother bespoke summary\nCounting Annotated Features.............................\nCDS:4805\ngene:4852\ntRNA:43\ntmRNA:1\nrRNA:3\nIS110 family transposase IS117:1\nIS30 family transposase ISMsm8:1\nInsertion_Sequences:2\nPseudogenes:141\n\nFirst 3 protein sequences\n&gt;P7741_00001 Anti-sigma-M factor RsmA\nMHITVSTPPPVIPLSHDQVLDLLQRAPDYGPFADPSRRASCLNGLGYPASTPILGAQPVD\nINARPGVLLVLAGDAPADLAVYAVALNCSAADTGLLASTTLPRLPDS\n&gt;P7741_00002 Thioredoxin reductase\nMTTDSSADATIHDVIVIGSGPAGYTAALYTARAQLAPLVFEGTSFGGALMTTTEVENYPG\nFREGITGPELMDEMREQALRFGADLRMEDVQSVSLDGPIKSVVTSDGETHRARAVILAMG\nAAARYLHVPGEQELLGRGVSSCATCDGFFFRDQDIAVIGGGDSAMEEATFLTRFARSVTL\nVHRRDEFRASKIMINRAQANDKIRILTNKIVLAVDGETTVTGLQLRDTVTGEETTLPVTG\nVFVAIGHEPRSSLVRDAVDVDPDGYVLVNGRTTGTSLEGVFAAGDLVDRTYRQAVTAAGS\nGCAAAIDAERWLAEHEATGDADSTDTLIGAQQ\n&gt;P7741_00003 Thioredoxin\nMTDSEKSSATIEVSDASFSTEVLSSNKPVLVDFWATWCGPCKMVAPVLEEIATERADNLT\nVAKLDVDANPETARNFQVVSIPTMILFKDGEPVKRIVGAKGKAALLRELSDAVPNLG\n\nFirst 3 genes / CDS\nlocus_tag   ftype   length_bp   gene    EC_number   COG product\nP7741_00001 gene    324 rsmA_1          \nP7741_00001 CDS 324 rsmA_1          Anti-sigma-M factor RsmA\nP7741_00002 gene    999 trxB_1          \nP7741_00002 CDS 999 trxB_1  1.8.1.9 COG0492 Thioredoxin reductase\nP7741_00003 gene    354 trxA            \nP7741_00003 CDS 354 trxA        COG0526 Thioredoxin\n\nSome pseudogenes\nFound 4805 genes.\nFound 141 potential psuedo-genes\nP7741_00021 & P7741_00022 =&gt; HTH-type transcriptional activator TipA\nP7741_00062 & P7741_00063 =&gt; putative protein\nP7741_00063 & P7741_00064 =&gt; putative protein\nP7741_00161 & P7741_00162 =&gt; ESX-1 secretion-associated protein EspK\nP7741_00272 & P7741_00273 =&gt; putative protein\nP7741_00273 & P7741_00274 =&gt; putative protein\nP7741_00276 & P7741_00277 =&gt; putative monooxygenase\nP7741_00279 & P7741_00280 =&gt; Putative citrate synthase 2\nP7741_00281 & P7741_00282 =&gt; Sphingomyelinase\nP7741_00293 & P7741_00294 =&gt; putative protein\n...."
  },
  {
    "objectID": "example_1.html#comparative-analysis",
    "href": "example_1.html#comparative-analysis",
    "title": "Example #1",
    "section": "Comparative Analysis",
    "text": "Comparative Analysis\n\nAverage Nucleotide Identity\n\ndRep is a python program for rapidly comparing large numbers of genomes\nComments in dendrogram.sh says it needs https://github.com/ParBLiSS/FastANI and that leads to https://drep.readthedocs.io/en/latest/installation.html\nFastANI is developed for fast alignment-free computation of whole-genome Average Nucleotide Identity (ANI).\nScript dendrogram.sh calls dRep: it is installed in conda bacterial-genomics-tutorial-sw7 but not possible to add fastani to this build do to errors (with perl versions if I remember correctly), so build a particular environment for dRep (see Set Up page).\n\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\n# particular environment for dRep\nconda activate for_drep\n\n# dRep check_dependencies\n# uncomment to re-run\n# ./dendogram.sh\n\nconda deactivate\n\n\nSome of the outputs from the PDFs generated are given as screen-shot images here.\nCluster of P7741/Liflandii/Shinsuense is different between methods ANI methods but agreement with the distinction of SGL03 and Agy99 that are approaching 100% Average Nucleotide Identity.\n\n\n\n\nfastANI cluster: just the Mycobacterium ulcerans genomes\n\n\n\n\n\nMASH cluster: H37Rv (green label - hard to read in image) is Mycobacterium tuberculosis and is clearly very different, an outlier with respect to ANI, to the Mycobacterium ulcerans genomes.\n\n\n\n\nGenome ring structures using BRIG\nusing https://github.com/happykhan/BRIG\n\nBRIG is a standalone interactive application with interface to run BLAST and to render the output as ring structure visualizations.\nget BRIG-0.95-dist: start with enough RAM, java -Xmx1500M -jar BRIG.jar\nNeeds Genbank formats as generated by prokka (e.g. P7741.gbk).\n\nThis required re-running prokka for reference genomes as get_genome_gffs.sh previously deleted the analysis folder after taking gff\nNow I keep the complete folder for future usage\n\nThe forms in BRIG need acclimatization, but once understood, the tool works is great\n\nthe path to BLAST binary folder needs to be set in “Configure BRIG options…”\n\nin this case, pairwise genome blastn jobs are performed\ncompute job progress can be seen in the specified “Output folder”\n\ne.g. WGS_Bacteria/BRIG/Mycobacterium_ulcerans_5g\nfolder I used for the 5 genomes of Mycobacterium ulcerans\n\n\nit’s useful to set-up a symbolic link at same level as BRIG install to gkb directory\nextensive image rendering options are available to customize the graphic\n\n\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\n# find gbks and copy to folder \n# mkdir gbk\n# find . -name \"*.gbk\" | perl -ne 'chomp ; print \"cp $_ gbk/\\n\"' -\n# could redirect to a shell script, but prefer to develop commands and cut/paste into terminal for short batch processes \ncp ./H37Rv/H37Rv.gbk gbk/\ncp ./SGL03/SGL03.gbk gbk/\ncp ./Shinsuense/Shinsuense.gbk gbk/\ncp ./P7741_annotation/P7741.gbk gbk/\ncp ./Agy99/Agy99.gbk gbk/\ncp ./Liflandii/Liflandii.gbk gbk/\n  \nconda deactivate\n\n\nMycobacterium ulcerans: 5 genomes compared - P7741 was assembled in the workflow. Click on image gets the SVG version.\n\n\n\nMycobacterium ulcerans liflandii vs Mycobacterium tuberculosis (var. H37Rv). Click on image gets the SVG version.\n\n\n\n\nGenerate Genome Feature Files\nusing https://github.com/tseemann/prokka to run 5 reference genomes Agy99, Liflandii, SGL03, Shinsuense, H37Rv\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\n# \nconda activate bacterial-genomics-tutorial-sw7\n\n# takes just over an hour on laptop to \n# generate gffs for 6 bacterial genomes\n# ./get_genome_gffs.sh \n\nls -lh gffs | awk '{print $5 \" \" $6 $7 \" \" $8\" \" $9}' \n\nconda deactivate\n\n   \n7.2M Feb28 18:55 Agy99.gff\n5.5M Feb28 19:28 H37Rv.gff\n8.0M Feb28 19:04 Liflandii.gff\n6.4M Feb28 19:28 P7741.gff\n7.2M Feb28 19:12 SGL03.gff\n7.6M Feb28 19:21 Shinsuense.gff\n\n\n\n\nGenerate Pangenome\nusing\n\nroary and roary_plots.py https://sanger-pathogens.github.io/Roary/\n\nRoary is a high speed stand alone pan genome pipeline, which takes annotated assemblies in GFF3 format (produced by Prokka (Seemann, 2014)) and calculates the pan genome.\n\nFastTree https://microbesonline.org/fasttree/\n\nFastTree infers approximately-maximum-likelihood phylogenetic trees from alignments of nucleotide or protein sequences.\n\n\n\n# conda \nsource ~/anaconda3/etc/profile.d/conda.sh\n# \nconda activate bacterial-genomics-tutorial-sw7\n\n# uncomment to re-run\n# ./get_pangenome.sh \n\n# Pangenome analysis using roary and fasttree\n# i have 4 cores\nthreads=4\n\n# # Uncomment appropriately to re-run\n# roary -f pangenome -p $threads -e -n -v --mafft gffs/*.gff\n# # Generate alignment file\n# FastTree -nt -gtr pangenome/core_gene_alignment.aln &gt; pangenome/mytree.newick\n\n\n# # Plot phylogenetic tree and presence/absense in svg format\n# python roary_plots.py --labels --format svg pangenome/mytree.newick pangenome/gene_presence_absence.csv\n# # same as png\n# python roary_plots.py --labels              pangenome/mytree.newick pangenome/gene_presence_absence.csv\n# # move all pangenome plots to img folder\n# mv pangenome_*.{svg,png} img\n\n# # generates gene_count_summary.png that needs to be renamed and moved \n# # 3 closely related genomes\n# python gene_count_summary.py P7741 Agy99 Liflandii pangenome/gene_presence_absence.csv\n# mv gene_count_summary.png  img/P7741_Agy99_Liflandii.png\n# # 2 closely related genomes and Mtycobacterium tuberculosis\n# python gene_count_summary.py P7741 H37Rv Liflandii pangenome/gene_presence_absence.csv\n# mv gene_count_summary.png  img/P7741_H37Rv_Liflandii.png\n\necho \"Genomes used with Roary:\"\nls -1 gffs/*.gff\necho \"\"\n\necho \"pangenome/summary_statistics.txt\"\ncat pangenome/summary_statistics.txt\n\nconda deactivate\n\nGenomes used with Roary:\ngffs/Agy99.gff\ngffs/H37Rv.gff\ngffs/Liflandii.gff\ngffs/P7741.gff\ngffs/SGL03.gff\ngffs/Shinsuense.gff\n\npangenome/summary_statistics.txt\nCore genes  (99% &lt;= strains &lt;= 100%)    91\nSoft core genes (95% &lt;= strains &lt; 99%)  0\nShell genes (15% &lt;= strains &lt; 95%)  11844\nCloud genes (0% &lt;= strains &lt; 15%)   0\nTotal genes (0% &lt;= strains &lt;= 100%) 11935\n\n\n\nImage above: A sample of genes_presence_absense.csv where number of present = 5 genomes. Click on image to get the full CSV file - 11936 lines.\n\n\nImage above: Pangenome Tree and Matrix of the Mycobacterium tuberculosis genome versus the Mycobacterium ulcerans genomes. Of the 11935 only 91 are considered core genes across all 6 genomes (a score of between &gt;= 99% similarity). A click on the image gets the scalable SVG version.\n\n\n\n\nPangenome Frequency.\n\n\n\n\n\nGenes unique to the set P7741, Agy99 and Liflandii (1395 = 390 + 2 + 120 + 141 + 3 + 6 + 733). Within the set, for example Agy99 has 120 unique genes. Of the 1395 unique genes within the set, Agy99 and P7741 share only 5, whilst P7741 and Liflandii share 144. Seems like P7741 and Liflandii are phylogenetically closer than to each other than to Agy99.\n\n\n\n\n\nGenes unique to the set P7741, H37Rv, Liflandii (5169 = 390 + 0 + 3904 + 141 + 1 + 0 + 733). Mycobacterium tuberculosis (var. H37Rv) is clearly, and as expected, relatively distant to the Mycobacterium ulcerans genomes."
  },
  {
    "objectID": "example_1.html#bug-note",
    "href": "example_1.html#bug-note",
    "title": "Example #1",
    "section": "Bug note",
    "text": "Bug note\n\n# With Quarto, the strange bug means that if an {r} executable block is included\n# then the preceding {zsh} or {bash} blocks are executed, otherwise not!\n# Simply include this and all is executed as desired."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WGS Bacteria",
    "section": "",
    "text": "A place to look at pragmatic aspects of Whole Genome Sequence (WGS) analysis with bacterial genomes. The examples are based upon openly available data and software. Building on my previous experience in genomics, this updated hands-on practice reminds that this computational domain requires a plethora of diverse tools and documentation from globally distributed research groups and individuals (crucial contributions to the community) and calls upon a blend of bioinformatics and system administration understanding. System administration aspects are noted in “Set Up Notes”. All computations were possible using a rather humble computational server: my Mac laptop was suprisingly capable (a testament to optimized algorithms?!) with these relatively small genomes."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "WGS Bacteria",
    "section": "",
    "text": "A place to look at pragmatic aspects of Whole Genome Sequence (WGS) analysis with bacterial genomes. The examples are based upon openly available data and software. Building on my previous experience in genomics, this updated hands-on practice reminds that this computational domain requires a plethora of diverse tools and documentation from globally distributed research groups and individuals (crucial contributions to the community) and calls upon a blend of bioinformatics and system administration understanding. System administration aspects are noted in “Set Up Notes”. All computations were possible using a rather humble computational server: my Mac laptop was suprisingly capable (a testament to optimized algorithms?!) with these relatively small genomes."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About me"
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Set Up Notes",
    "section": "",
    "text": "System administration and machine set-up is often a hurdle. This page briefly documents my experience in setting up a usable working environment on a Mac laptop. For production purposes one might streamline this to a similar Docker image or similar."
  },
  {
    "objectID": "setup.html#quarto",
    "href": "setup.html#quarto",
    "title": "Set Up Notes",
    "section": "Quarto",
    "text": "Quarto\n\n# Quarto install \nquarto -v \n\n1.4.489"
  },
  {
    "objectID": "setup.html#conda",
    "href": "setup.html#conda",
    "title": "Set Up Notes",
    "section": "Conda",
    "text": "Conda\n\nSummary\n\nA single environment was not possible\n\nquast causes issues (folder envs_yaml/ and files used to help resolve issues)\n\nbacterial-genomics-tutorial-sw7 is the most complete and is used\n\nA second environment, just_quast is also needed\n\nA binary install of SPAdes was needed\npilon download\n\n\n# use clean install of conda on machine in private space \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda -V\n# e.g. add a channel \n# conda config --add channels bioconda \nconda config --show channels \n\nconda env list\n\nconda 24.1.2\nchannels:\n  - conda-forge\n  - bioconda\n  - defaults\n# conda environments:\n#\nbase                  *  /Users/sw/anaconda3\nbacterial-genomics-tutorial-sw1     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw1\nbacterial-genomics-tutorial-sw2     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw2\nbacterial-genomics-tutorial-sw3     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw3\nbacterial-genomics-tutorial-sw4     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw4\nbacterial-genomics-tutorial-sw5     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw5\nbacterial-genomics-tutorial-sw7     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7\nexample                  /Users/sw/anaconda3/envs/example\nfor_drep                 /Users/sw/anaconda3/envs/for_drep\njust_quast               /Users/sw/anaconda3/envs/just_quast"
  },
  {
    "objectID": "setup.html#main-conda-env-spades",
    "href": "setup.html#main-conda-env-spades",
    "title": "Set Up Notes",
    "section": "Main conda env / SPAdes",
    "text": "Main conda env / SPAdes\nReference commands and setup notes\n# This code is not executed in page rendering\n# e.g. create an env\nconda create --name example\nconda activate example\nconda install jupyterlab\nconda list | grep jupyter\n# run for example jupyterlab\njupyter-lab\nconda deactivate\n\n# envs\nconda env create -f environment.yaml\n# Found conflicts! Looking for incompatible packages.\n\n# now a series of reduced env for testing and debugging\nconda env create -f envs_yaml/environment_sw1.yaml\nconda env create -f envs_yaml/environment_sw2.yaml\nconda env create -f envs_yaml/environment_sw4.yaml\nconda env create -f envs_yaml/environment_sw3.yaml\nconda env create -f envs_yaml/environment_sw5.yaml\n\n# Adding 'quast' causes issues\n# ... Solving environment: failed with ..\nconda env create -f envs_yaml/environment_sw6.yaml\n\n# Now a spades issue, \n# https://github.com/ablab/spades/issues/8732\n# see url above\n# try specify a version\n# first search\nconda search spades\n# i specify the latest version as 3.15.2\nconda env create -f envs_yaml/environment_sw7.yaml\n\n# and now we need fastani\nconda env create -f envs_yaml/environment_sw8.yaml\n# Solving environment: | warning  libmamba Problem type not implemented SOLVER_RULE_STRICT_REPO_PRIORITY\n# LibMambaUnsatisfiableError: Encountered problems while solving:\n#  - package roary-3.7.0-0 requires perl-bioperl-core &lt;1.7, but none of the providers can be installed\n\n# and note,\n#############################################################################################\n#                                                                                           #\n#   Note: SPAdes installed through bioconda on MacOS may be somewhat slower than the SPAdes #\n#   binaries distributed by the authors at                                                  #\n#                                                                                           #\n#   http://cab.spbu.ru/files/release3.15.2/SPAdes-3.15.2-Darwin.tar.gz\n#                                                                                           #\n#   due to unavailability of parallel libstdc++ for the Clang compiler used by bioconda on  #\n#   MacOS; see https://github.com/ablab/spades/issues/194#issuecomment-523175204            #\n#                                                                                           #\n#############################################################################################\n\n# binary is not available\n# also, the whole domain content http://cab.spbu.ru/ is unavailable\n\n# in any case, spades 3.15.2 doesn't work\n\n# same error,\nin construct_mapping\n    if not isinstance(key, collections.Hashable):\n AttributeError: module 'collections' has no attribute 'Hashable'\n\n# The fix is included into the latest SPAdes 3.15.4 release\n\n# conda just has up to 3.15.2 !!!\n\n# try \nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n# commands change the order to\nchannels:\n  - conda-forge\n  - bioconda\n  - defaults\nconda search spades \n# 3.15.2 is latest, channels inc bioconda\nconda config --show channels \n# and URLs \nconda config --show default_channels\n# but not for bioconda\n\n# it's a mystery why versions &gt; 3.15.2 can not be seen by\nconda search spades \n# clearly they exist\n# https://bioconda.github.io/recipes/spades/README.html#package-spades\n\nconda update spades\n# All requested packages already installed.\nconda list | grep spades\n# spades                    3.15.2               he641558_0    bioconda\n\n# seems like I would need to setup mamba to get a working spades?\nhttps://bioconda.github.io/recipes/spades/README.html\n\n# get binaries from github, a viable option?\nhttps://github.com/ablab/spades?tab=readme-ov-file#sec2.2\n# installed in home (~)\nwget https://github.com/ablab/spades/releases/download/v3.15.5/SPAdes-3.15.5-Darwin.tar.gz\ntar -zxf SPAdes-3.15.5-Darwin.tar.gz\ncd SPAdes-3.15.5-Darwin/bin/\n\n# This seemed to work\n\n### additional commands \n# to remove an environment e.g.\nconda remove --name bacterial-genomics-tutorial-sw1-sw1 --all\n\nconda info"
  },
  {
    "objectID": "setup.html#quast-only-environment",
    "href": "setup.html#quast-only-environment",
    "title": "Set Up Notes",
    "section": "Quast only environment",
    "text": "Quast only environment\nconda create --name just_quast\nconda activate just_quast\nconda install quast\n# has lots of dependancies and gives final messages\n\nDownloading and Extracting Packages:\n                                                                                                              \nPreparing transaction: done                                                                   \nVerifying transaction: done                                                                              \nExecuting transaction: | The default QUAST package does not include:                                                                                                                              \n* GRIDSS (needed for structural variants detection)                                                             \n* SILVA 16S rRNA database (needed for reference genome detection in metagenomic datasets)\n* BUSCO tools and databases (needed for searching BUSCO genes) -- works in Linux only!                                                                                                            \nTo be able to use those, please run                                                                                                                                                               \n    quast-download-gridss                                                                            \n    quast-download-silva\n    \n    \n    quast-download-busco   \n    --------------------\n\nwith   Downloading BUSCO database...\nDownloading bacteria database (file: bacteria.tar.gz)...\n\nERROR! Failed downloading bacteria database (url: https://busco-archive.ezlab.org/v3/datasets/bacteria_odb9.tar.gz), QUAST functionality will be limited! Exception caught: HTTP Error 404: Not Found\n\nYou can try to download the file manually, place it in /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco/bacteria.tar.gz and restart QUAST\n\nWARNING: Failed to download bacteria database from https://busco-archive.ezlab.org/v3/datasets/bacteria_odb9.tar.gz and unpack it into /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco\n  Downloading BUSCO database...\n\nDownloading eukaryota database (file: eukaryota.tar.gz)...\n\nERROR! Failed downloading eukaryota database (url: https://busco-archive.ezlab.org/v3/datasets/eukaryota_odb9.tar.gz), QUAST functionality will be limited! Exception caught: HTTP Error 404: Not Found\n\nYou can try to download the file manually, place it in /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco/eukaryota.tar.gz and restart QUAST\n\nWARNING: Failed to download eukaryota database from https://busco-archive.ezlab.org/v3/datasets/eukaryota_odb9.tar.gz and unpack it into /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco\n  Downloading BUSCO database...\n\nDownloading fungi database (file: fungi.tar.gz)...\n\nERROR! Failed downloading fungi database (url: https://busco-archive.ezlab.org/v3/datasets/fungi_odb9.tar.gz), QUAST functionality will be limited! Exception caught: HTTP Error 404: Not Found\n\nYou can try to download the file manually, place it in /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco/fungi.tar.gz and restart QUAST\n\nWARNING: Failed to download fungi database from https://busco-archive.ezlab.org/v3/datasets/fungi_odb9.tar.gz and unpack it into /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco"
  },
  {
    "objectID": "setup.html#environment-for-drep",
    "href": "setup.html#environment-for-drep",
    "title": "Set Up Notes",
    "section": "Environment for dREP",
    "text": "Environment for dREP\ncreate special environment for dRep because not possible to add fastani to bacterial-genomics-tutorial-sw7\nconda create --name for_drep \nconda activate for_drep\nconda install drep\nconda deactivate"
  },
  {
    "objectID": "setup.html#pilon",
    "href": "setup.html#pilon",
    "title": "Set Up Notes",
    "section": "Pilon",
    "text": "Pilon\n\n# need pilon\n# quick and dirty way\n# TO DO: paranmeterise and check for latest version\nmkdir apps\ncd apps\nif [ -f pilon-1.24.jar ]; then\n    echo 'pilon-1.24.jar file exists.'\nelse\n    echo 'Getting pilon jar file: '\n    wget https://github.com/broadinstitute/pilon/releases/download/v1.24/pilon-1.24.jar\nfi\n# then symbolic link the latest version to pilon.jar\necho 'Directory listing: '\nls -l\ncd ..\n\nmkdir: apps: File exists\npilon-1.24.jar file exists.\nDirectory listing: \ntotal 35992\n-rw-r--r--  1 sw  staff   7387440 Dec  8  2021 pilon-1.23.jar\n-rw-r--r--  1 sw  staff  11034933 Dec  8  2021 pilon-1.24.jar\nlrwxr-xr-x  1 sw  staff        14 Feb 25 14:27 pilon.jar -&gt; pilon-1.24.jar"
  },
  {
    "objectID": "setup.html#strange-bug",
    "href": "setup.html#strange-bug",
    "title": "Set Up Notes",
    "section": "Strange bug",
    "text": "Strange bug\n\n# R test - a good rational approximation to a math joke\n# Used to test whether R is working i.e. do something simple test\nmessage(paste0(\"Rough Pie: \", 355/113, \"\\n\",\n               \" Real Pi : \", pi))\n\nRough Pie: 3.14159292035398\n Real Pi : 3.14159265358979\n\n# The bizarre thing is, if I remove this block\n# the bash above does not execute\n# Actually an empty {r} block is sufficient as tested with Example #1\n# Go figure!! Makes no sense. Seems like a Quarto bug"
  }
]