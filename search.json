[
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Set Up Notes",
    "section": "",
    "text": "# Quarto install \nquarto -v \n\n1.4.489"
  },
  {
    "objectID": "setup.html#quarto",
    "href": "setup.html#quarto",
    "title": "Set Up Notes",
    "section": "",
    "text": "# Quarto install \nquarto -v \n\n1.4.489"
  },
  {
    "objectID": "setup.html#conda",
    "href": "setup.html#conda",
    "title": "Set Up Notes",
    "section": "Conda",
    "text": "Conda\n\nSummary:\n\nA single environment was not possible\n\nquast causes issues (folder envs_yaml/ and files used to help resolve issues)\n\nbacterial-genomics-tutorial-sw7 is the most complete and is used\nA second enviroment, just_quast is also needed\nA binary install of SPAdes was needed\npilon download\n\n\n# use clean install of conda on machine in private space \nsource ~/anaconda3/etc/profile.d/conda.sh\nconda -V\n# e.g. add a channel \n# conda config --add channels bioconda \nconda config --show channels \n\nconda env list\n\nconda 24.1.2\nchannels:\n  - conda-forge\n  - bioconda\n  - defaults\n# conda environments:\n#\nbase                  *  /Users/sw/anaconda3\nbacterial-genomics-tutorial-sw1     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw1\nbacterial-genomics-tutorial-sw2     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw2\nbacterial-genomics-tutorial-sw3     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw3\nbacterial-genomics-tutorial-sw4     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw4\nbacterial-genomics-tutorial-sw5     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw5\nbacterial-genomics-tutorial-sw7     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7\nexample                  /Users/sw/anaconda3/envs/example\njust_quast               /Users/sw/anaconda3/envs/just_quast"
  },
  {
    "objectID": "setup.html#main-conda-env-spades",
    "href": "setup.html#main-conda-env-spades",
    "title": "Set Up Notes",
    "section": "Main conda env / SPAdes",
    "text": "Main conda env / SPAdes\nReference commands and setup notes\n# This code is not executed in page rendering\n# e.g. create an env\nconda create --name example\nconda activate example\nconda install jupyterlab\nconda list | grep jupyter\n# run for example jupyterlab\njupyter-lab\nconda deactivate\n\n# envs\nconda env create -f environment.yaml\n# Found conflicts! Looking for incompatible packages.\n\n# now a series of reduced env for testing and debugging\nconda env create -f envs_yaml/environment_sw1.yaml\nconda env create -f envs_yaml/environment_sw2.yaml\nconda env create -f envs_yaml/environment_sw4.yaml\nconda env create -f envs_yaml/environment_sw3.yaml\nconda env create -f envs_yaml/environment_sw5.yaml\n\n# Adding 'quast' causes issues\n# ... Solving environment: failed with ..\nconda env create -f envs_yaml/environment_sw6.yaml\n\n# Now a spades issue, \n# https://github.com/ablab/spades/issues/8732\n# see url above\n# try specify a version\n# first search\nconda search spades\n# i specify the latest version as 3.15.2\nconda env create -f envs_yaml/environment_sw7.yaml\n\n# and note,\n#############################################################################################\n#                                                                                           #\n#   Note: SPAdes installed through bioconda on MacOS may be somewhat slower than the SPAdes #\n#   binaries distributed by the authors at                                                  #\n#                                                                                           #\n#   http://cab.spbu.ru/files/release3.15.2/SPAdes-3.15.2-Darwin.tar.gz\n#                                                                                           #\n#   due to unavailability of parallel libstdc++ for the Clang compiler used by bioconda on  #\n#   MacOS; see https://github.com/ablab/spades/issues/194#issuecomment-523175204            #\n#                                                                                           #\n#############################################################################################\n\n# binary is not available\n# also, the whole domain content http://cab.spbu.ru/ is unavailable\n\n# in any case, spades 3.15.2 doesn't work\n\n# same error,\nin construct_mapping\n    if not isinstance(key, collections.Hashable):\n AttributeError: module 'collections' has no attribute 'Hashable'\n\n# The fix is included into the latest SPAdes 3.15.4 release\n\n# conda just has up to 3.15.2 !!!\n\n# try \nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n# commands change the order to\nchannels:\n  - conda-forge\n  - bioconda\n  - defaults\nconda search spades \n# 3.15.2 is latest, channels inc bioconda\nconda config --show channels \n# and URLs \nconda config --show default_channels\n# but not for bioconda\n\n# it's a mystery why versions &gt; 3.15.2 can not be seen by\nconda search spades \n# clearly they exist\n# https://bioconda.github.io/recipes/spades/README.html#package-spades\n\nconda update spades\n# All requested packages already installed.\nconda list | grep spades\n# spades                    3.15.2               he641558_0    bioconda\n\n# seems like I would need to setup mamba to get a working spades?\nhttps://bioconda.github.io/recipes/spades/README.html\n\n# get binaries from github, a viable option?\nhttps://github.com/ablab/spades?tab=readme-ov-file#sec2.2\n# installed in home (~)\nwget https://github.com/ablab/spades/releases/download/v3.15.5/SPAdes-3.15.5-Darwin.tar.gz\ntar -zxf SPAdes-3.15.5-Darwin.tar.gz\ncd SPAdes-3.15.5-Darwin/bin/\n\n# This seemed to work\n\n### additional commands \n# to remove an environment e.g.\nconda remove --name bacterial-genomics-tutorial-sw1-sw1 --all\n\nconda info"
  },
  {
    "objectID": "setup.html#quast-only-environment",
    "href": "setup.html#quast-only-environment",
    "title": "Set Up Notes",
    "section": "Quast only environment",
    "text": "Quast only environment\nconda create --name just_quast\nconda activate just_quast\nconda install quast\n# has lots of dependancies and gives final messages\n\nDownloading and Extracting Packages:\n                                                                                                              \nPreparing transaction: done                                                                   \nVerifying transaction: done                                                                              \nExecuting transaction: | The default QUAST package does not include:                                                                                                                              \n* GRIDSS (needed for structural variants detection)                                                             \n* SILVA 16S rRNA database (needed for reference genome detection in metagenomic datasets)\n* BUSCO tools and databases (needed for searching BUSCO genes) -- works in Linux only!                                                                                                            \nTo be able to use those, please run                                                                                                                                                               \n    quast-download-gridss                                                                            \n    quast-download-silva\n    \n    \n    quast-download-busco   \n    --------------------\n\nwith   Downloading BUSCO database...\nDownloading bacteria database (file: bacteria.tar.gz)...\n\nERROR! Failed downloading bacteria database (url: https://busco-archive.ezlab.org/v3/datasets/bacteria_odb9.tar.gz), QUAST functionality will be limited! Exception caught: HTTP Error 404: Not Found\n\nYou can try to download the file manually, place it in /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco/bacteria.tar.gz and restart QUAST\n\nWARNING: Failed to download bacteria database from https://busco-archive.ezlab.org/v3/datasets/bacteria_odb9.tar.gz and unpack it into /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco\n  Downloading BUSCO database...\n\nDownloading eukaryota database (file: eukaryota.tar.gz)...\n\nERROR! Failed downloading eukaryota database (url: https://busco-archive.ezlab.org/v3/datasets/eukaryota_odb9.tar.gz), QUAST functionality will be limited! Exception caught: HTTP Error 404: Not Found\n\nYou can try to download the file manually, place it in /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco/eukaryota.tar.gz and restart QUAST\n\nWARNING: Failed to download eukaryota database from https://busco-archive.ezlab.org/v3/datasets/eukaryota_odb9.tar.gz and unpack it into /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco\n  Downloading BUSCO database...\n\nDownloading fungi database (file: fungi.tar.gz)...\n\nERROR! Failed downloading fungi database (url: https://busco-archive.ezlab.org/v3/datasets/fungi_odb9.tar.gz), QUAST functionality will be limited! Exception caught: HTTP Error 404: Not Found\n\nYou can try to download the file manually, place it in /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco/fungi.tar.gz and restart QUAST\n\nWARNING: Failed to download fungi database from https://busco-archive.ezlab.org/v3/datasets/fungi_odb9.tar.gz and unpack it into /Users/sw/anaconda3/envs/just_quast/lib/python3.10/site-packages/quast_libs/busco"
  },
  {
    "objectID": "setup.html#pilon",
    "href": "setup.html#pilon",
    "title": "Set Up Notes",
    "section": "Pilon",
    "text": "Pilon\n\n# need pilon\nmkdir apps\ncd apps\nif [ -f pilon-1.24.jar ]; then\n    echo 'Pilon jar file exists.'\nelse\n    echo 'Getting pilon jar file '\n    wget https://github.com/broadinstitute/pilon/releases/download/v1.24/pilon-1.24.jar\nfi\necho 'Dir list'\nls\ncd ..\n\n# link the latest version to pilon.jar\n\nmkdir: apps: File exists\nPilon jar file exists.\nDir list\npilon-1.23.jar\npilon-1.24.jar\npilon.jar"
  },
  {
    "objectID": "setup.html#strange-bug",
    "href": "setup.html#strange-bug",
    "title": "Set Up Notes",
    "section": "Strange bug",
    "text": "Strange bug\n\n# R test - a good rational approximation to a math joke\nmessage(paste0(\"Rough Pie: \", 355/113, \"\\n\",\n               \" Real Pi : \", pi))\n\nRough Pie: 3.14159292035398\n Real Pi : 3.14159265358979\n\n# And the bizarre thing is, if I remove this joke block\n# the bash above does not execute\n# go figure!! makes no sense"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About me"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WGS Bacteria",
    "section": "",
    "text": "Some minimal text for the moment"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "WGS Bacteria",
    "section": "",
    "text": "Some minimal text for the moment"
  },
  {
    "objectID": "example_1.html",
    "href": "example_1.html",
    "title": "Example #1",
    "section": "",
    "text": "This example uses just the Illumina data (https://www.ebi.ac.uk/ena/browser/view/ERR3335404) generated for the study “Whole genome sequence of Mycobacterium ulcerans CSURP7741, a French Guyana clinical isolate” (https://www.ebi.ac.uk/ena/browser/view/PRJEB30628). Mycobacterium ulcerans is an environmental non-tuberculous mycobacterium responsible for Buruli ulcer.\nThe reference genome paper is “Complete genome sequence of the frog pathogen Mycobacterium ulcerans ecovar Liflandii” and it’s sequence https://www.ncbi.nlm.nih.gov/nuccore/NC_020133. Mycobacterium liflandii 128FXT, complete sequence NCBI Reference Sequence: NC_020133.1\nThis work is based on the excellent presentation and analysis as instructed by vincentappiah video. The work has been reproduced and adapted in order that it works on a Mac laptop with updated versions of analysis software available in 2024 and using the Quarto package for presentation and re-usability."
  },
  {
    "objectID": "example_1.html#enter-conda-env-data-download-qc-reports",
    "href": "example_1.html#enter-conda-env-data-download-qc-reports",
    "title": "Example #1",
    "section": "Enter Conda env, data download, QC reports",
    "text": "Enter Conda env, data download, QC reports\n\n# use clean install of conda on machine in private space \nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\nconda -V\nconda env list\nconda activate bacterial-genomics-tutorial-sw7\n# download data to data folder if not done already\nchmod +x download_data.sh\n# uncomment to re-run\n# ./download_data.sh\n# run fastqc\nmkdir QC_RAW_READS\n# fastqc data/*.fastq.gz -o QC_RAW_READS\nconda deactivate\n\nconda 24.1.2\n# conda environments:\n#\nbase                  *  /Users/sw/anaconda3\nbacterial-genomics-tutorial-sw1     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw1\nbacterial-genomics-tutorial-sw2     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw2\nbacterial-genomics-tutorial-sw3     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw3\nbacterial-genomics-tutorial-sw4     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw4\nbacterial-genomics-tutorial-sw5     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw5\nbacterial-genomics-tutorial-sw7     /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7\nexample                  /Users/sw/anaconda3/envs/example\njust_quast               /Users/sw/anaconda3/envs/just_quast\n\nmkdir: QC_RAW_READS: File exists\n\n\nResults files are QC html reports\n./QC_RAW_READS/P7741_R1_fastqc.html\n./QC_RAW_READS/P7741_R2_fastqc.html"
  },
  {
    "objectID": "example_1.html#trim-and-qc-reports",
    "href": "example_1.html#trim-and-qc-reports",
    "title": "Example #1",
    "section": "Trim and QC reports",
    "text": "Trim and QC reports\n\n# use clean install of conda on machine in private space \nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\nmkdir trimmed_reads\nread1=data/P7741_R1.fastq.gz\nread2=data/P7741_R2.fastq.gz\nOutputForwardPaired=trimmed_reads/P7741_R1.fastq.gz    \nOutputForwardUnpaired=trimmed_reads/P7741_unpaired_R1.fastq.gz\nOutputReversePaired=trimmed_reads/P7741_R2.fastq.gz\nOutputReverseUnpaired=trimmed_reads/P7741_unpaired_R2.fastq.gz\nthreads=4\n\n# uncomment to run\n# trimmomatic PE -threads $threads $read1 $read2 \\\n$OutputForwardPaired $OutputForwardUnpaired \\\n$OutputReversePaired $OutputReverseUnpaired \\\nILLUMINACLIP:TruSeq3-PE.fa:2:30:10:8:true HEADCROP:3 TRAILING:10 MINLEN:25\n\nmkdir QC_TRIMMED_READS\n# uncomment to run\n# fastqc trimmed_reads/* -o QC_TRIMMED_READS\n\nls -1 QC_TRIMMED_READS\n\nconda deactivate\n\nmkdir: trimmed_reads: File exists\nzsh:16: permission denied: trimmed_reads/P7741_R1.fastq.gz\nmkdir: QC_TRIMMED_READS: File exists\nP7741_R1_fastqc.html\nP7741_R1_fastqc.zip\nP7741_R2_fastqc.html\nP7741_R2_fastqc.zip\nP7741_unpaired_R1_fastqc.html\nP7741_unpaired_R1_fastqc.zip\nP7741_unpaired_R2_fastqc.html\nP7741_unpaired_R2_fastqc.zip\n\n\nResults files are QC html reports. Vincent’s results are different around 16:29. In video he says sickle trimming was used but the code uses trimmomatic.\n./QC_TRIMMED_READS/P7741_R1_fastqc.html\n./QC_TRIMMED_READS/P7741_R2_fastqc.html\n./QC_TRIMMED_READS/P7741_unpaired_R1_fastqc.html\n./QC_TRIMMED_READS/P7741_unpaired_R2_fastqc.html"
  },
  {
    "objectID": "example_1.html#assembly",
    "href": "example_1.html#assembly",
    "title": "Example #1",
    "section": "Assembly",
    "text": "Assembly\n\n# Real problems setting up spades with conda - notes on Set Up page\n# Solution was to get the spades Mac binaries\n#\n# It runs but takes quite some time on my mini-server\n# Therefore delete directory\n# P7741_SPADES_OUT\n# and re-run if needed\n# ~/SPAdes-3.15.5-Darwin/bin/spades.py --careful -o P7741_SPADES_OUT -1 trimmed_reads/P7741_R1.fastq.gz -2 trimmed_reads/P7741_R2.fastq.gz\n\nls -1 P7741_SPADES_OUT\n\nK21\nK33\nK55\nK77\nassembly_graph.fastg\nassembly_graph_after_simplification.gfa\nassembly_graph_with_scaffolds.gfa\nbefore_rr.fasta\ncontigs.fasta\ncontigs.paths\ncorrected\ndataset.info\ninput_dataset.yaml\nmisc\nmismatch_corrector\nparams.txt\npipeline_state\nrun_spades.sh\nrun_spades.yaml\nscaffolds.fasta\nscaffolds.paths\nspades.log\ntmp\nwarnings.log"
  },
  {
    "objectID": "example_1.html#polishing",
    "href": "example_1.html#polishing",
    "title": "Example #1",
    "section": "Polishing",
    "text": "Polishing\n\n# conda \nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n# Use standard script to do 4 rounds (not guaranteed to be optimal) of polishing\n# Runs but takes quite some time on my mini-server\n# To clean re-run, delete dirs,\n# polishing_process\n# re-run script\n# ./polish.sh\n\necho \"\"\nfind polishing_process\n\nconda deactivate\n\n\npolishing_process\npolishing_process/pilon_stage4.changes\npolishing_process/pilon_stage1.fasta.ann\npolishing_process/pilon_stage3.fasta.amb\npolishing_process/pilon_stage3.fasta.bwt\npolishing_process/stage1.pilon\npolishing_process/pilon_stage1.fasta\npolishing_process/pilon_stage3.fasta\npolishing_process/raw_assembly.fasta.ann\npolishing_process/mapping3.sorted.bam\npolishing_process/stage3.pilon\npolishing_process/pilon_stage4.fasta\npolishing_process/mapping4.sorted.bam\npolishing_process/pilon_stage2.fasta.amb\npolishing_process/stage4.pilon\npolishing_process/raw_assembly.fasta\npolishing_process/pilon_stage2.fasta.bwt\npolishing_process/raw_assembly.fasta.pac\npolishing_process/raw_assembly.fasta.sa\npolishing_process/pilon_stage2.fasta\npolishing_process/pilon_stage1.fasta.pac\npolishing_process/stage2.pilon\npolishing_process/mapping1.sorted.bam\npolishing_process/pilon_stage1.fasta.sa\npolishing_process/pilon_stage3.fasta.ann\npolishing_process/pilon_stage1.fasta.amb\npolishing_process/mapping1.sorted.bam.bai\npolishing_process/mapping2.sorted.bam\npolishing_process/pilon_stage1.fasta.bwt\npolishing_process/pilon_stage3.changes\npolishing_process/raw_assembly.fasta.bwt\npolishing_process/pilon_stage2.fasta.pac\npolishing_process/pilon_stage2.changes\npolishing_process/raw_assembly.fasta.amb\npolishing_process/pilon_stage2.fasta.ann\npolishing_process/pilon_stage3.fasta.sa\npolishing_process/pilon_stage2.fasta.sa\npolishing_process/mapping2.sorted.bam.bai\npolishing_process/pilon_stage3.fasta.pac\npolishing_process/mapping3.sorted.bam.bai\npolishing_process/mapping4.sorted.bam.bai\npolishing_process/pilon_stage1.changes"
  },
  {
    "objectID": "example_1.html#qc-of-assembly",
    "href": "example_1.html#qc-of-assembly",
    "title": "Example #1",
    "section": "QC of Assembly",
    "text": "QC of Assembly\n\n# conda\nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\n\n# just the quast software\nconda activate just_quast\n\n# genomes dir taked from vincents repo\n# quast throws an error with default script\n# -t 1 solves \n# other potential issue may exist as the install of quast was not completed...\n# see SetUp page\n\n# uncomment to run again\n# mkdir QC_ASSEMBLY\n# quast.py -t 1 -o QC_ASSEMBLY -R genomes/Liflandii.fasta P7741_SPADES_OUT/scaffolds.fasta P7741.polished.fasta\n\n# Results notes\n# N50 quality didn't change with polishing, GC% didn't change,\n# Slight change in misassemblies \n# Link in the report.html\n# This workflow uses just Illumiuna data\n\nls -1 QC_ASSEMBLY\n\nconda deactivate\n\naligned_stats\nbasic_stats\ncontigs_reports\ngenome_stats\nicarus.html\nicarus_viewers\nquast.log\nreport.html\nreport.pdf\nreport.tex\nreport.tsv\nreport.txt\ntransposed_report.tex\ntransposed_report.tsv\ntransposed_report.txt\n\n\n\nQuality Assessment Tool for Genome Assemblies (QUAST)\nQC_ASSEMBLY/report.html\n\n\nIcarus QUAST Contig Browser\nQC_ASSEMBLY/icarus.html\nQC_ASSEMBLY/icarus_viewers/contig_size_viewer.html\nQC_ASSEMBLY/icarus_viewers/alignment_viewer.html"
  },
  {
    "objectID": "example_1.html#reorder-contigs",
    "href": "example_1.html#reorder-contigs",
    "title": "Example #1",
    "section": "Reorder contigs",
    "text": "Reorder contigs\n\n# conda \nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\n# genomes/Agy99.fasta is NC_008611.1 Mycobacterium ulcerans Agy99, complete sequence\n# note this is a different genome to genomes/Liflandii.fasta !!\n# uncomment to re-run\n## ragtag.py scaffold genomes/Agy99.fasta P7741.polished.fasta -o P7741_reordered\n\n# Extract the reordered contig with a custom (modified!) python script\n# The scripts accept name of the ragtag file containing the reordered contigs \n# and accession number for the reference genome\npython extract_reordered.py P7741_reordered/ragtag.scaffold.fasta NC_008611.1\n# at this stage vincent gets length of 5291728 \n# and a gc of 64.98\n# potentially the difference is due to newer version of ragtag\n# i.e. v1.0.2 vs RagTag v2.1.0\n\nconda deactivate\n\nGC Percent, opt=ignore: 65.073454\nGC Percent, opt=ignore: 65.701833\nGC Percent, opt=weighted: 65.551660\nSequence Length: 5012494 bp\ndraft genome sequence extracted"
  },
  {
    "objectID": "example_1.html#mlst-and-antibiotic-resistance",
    "href": "example_1.html#mlst-and-antibiotic-resistance",
    "title": "Example #1",
    "section": "MLST and Antibiotic resistance",
    "text": "MLST and Antibiotic resistance\n\n# conda \nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\nmlst --csv P7741.reordered.fasta &gt; mlst.csv\n\nabricate P7741.reordered.fasta &gt; amr.summary.tab\ncat amr.summary.tab\n\nconda deactivate\n\n[20:09:36] This is mlst 2.23.0 running on darwin with Perl 5.030003\n[20:09:36] Checking mlst dependencies:\n[20:09:36] Found 'blastn' =&gt; /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7/bin/blastn\n[20:09:36] Found 'any2fasta' =&gt; /Users/sw/anaconda3/envs/bacterial-genomics-tutorial-sw7/bin/any2fasta\n[20:09:36] Found blastn: 2.15.0+ (002015)\n[20:09:36] Excluding 3 schemes: ecoli abaumannii vcholerae_2\n[20:09:38] Found exact allele match mycobacteria_2.S7-10\n[20:09:38] Found exact allele match mycobacteria_2.L16-450\n[20:09:38] Found exact allele match mycobacteria_2.S12-394\n[20:09:38] Found exact allele match mycobacteria_2.L19-11\n[20:09:38] Found exact allele match mycobacteria_2.S19-13\n[20:09:38] Found exact allele match mycobacteria_2.L35-10\n[20:09:38] Found exact allele match mycobacteria_2.S14Z-10\n[20:09:38] The manual is now quite extensive; read it at https://github.com/tseemann/mlst\n[20:09:38] Done.\nUsing nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: P7741.reordered.fasta\nFound 1 genes in P7741.reordered.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\n#FILE   SEQUENCE    START   END STRAND  GENE    COVERAGE    COVERAGE_MAP    GAPS    %COVERAGE   %IDENTITY   DATABASE    ACCESSION   PRODUCT RESISTANCE\nP7741.reordered.fasta   P7741   1110389 1110934 -   aac(2')-Ic  1-546/546   ========/====== 2/2 99.82   82.27   ncbi    NG_047229.1 aminoglycoside N-acetyltransferase AAC(2')-Ic   GENTAMICIN;TOBRAMCYIN"
  },
  {
    "objectID": "example_1.html#genome-annotation",
    "href": "example_1.html#genome-annotation",
    "title": "Example #1",
    "section": "Genome annotation",
    "text": "Genome annotation\n\n# conda \nsource /Users/sw/anaconda3/etc/profile.d/conda.sh\nconda activate bacterial-genomics-tutorial-sw7\n\ncpus=4\n# uncomment to re-run\n#prokka --cpus $cpus --kingdom Bacteria --locustag P7741 --outdir P7741_annotation --prefix P7741 --addgenes P7741.reordered.fasta\n\n./get_pseudo.pl P7741_annotation/P7741.faa &gt; P7741_annotation/P7741.pseudo.txt\nhead -100  P7741_annotation/P7741.pseudo.txt\nconda deactivate\n\nFound 4805 genes.\nFound 141 potential psuedo-genes\nP7741_00021 & P7741_00022 =&gt; HTH-type transcriptional activator TipA\nP7741_00062 & P7741_00063 =&gt; putative protein\nP7741_00063 & P7741_00064 =&gt; putative protein\nP7741_00161 & P7741_00162 =&gt; ESX-1 secretion-associated protein EspK\nP7741_00272 & P7741_00273 =&gt; putative protein\nP7741_00273 & P7741_00274 =&gt; putative protein\nP7741_00276 & P7741_00277 =&gt; putative monooxygenase\nP7741_00279 & P7741_00280 =&gt; Putative citrate synthase 2\nP7741_00281 & P7741_00282 =&gt; Sphingomyelinase\nP7741_00293 & P7741_00294 =&gt; putative protein\nP7741_00294 & P7741_00295 =&gt; putative protein\nP7741_00326 & P7741_00327 =&gt; putative protein\nP7741_00374 & P7741_00375 =&gt; Creatinase\nP7741_00383 & P7741_00384 =&gt; S-sulfocysteine synthase\nP7741_00386 & P7741_00387 =&gt; Multicopper oxidase MmcO\nP7741_00393 & P7741_00394 =&gt; 2,3-dihydroxyphenylpropionate/2,3-dihydroxicinnamic acid 1,2-dioxygenase\nP7741_00416 & P7741_00417 =&gt; Methylmalonyl-CoA mutase\nP7741_00502 & P7741_00503 =&gt; Isoniazid-induced protein IniC\nP7741_00512 & P7741_00513 =&gt; L-asparagine permease 2\nP7741_00543 & P7741_00544 =&gt; Putrescine importer PuuP\nP7741_00583 & P7741_00584 =&gt; putative protein\nP7741_00746 & P7741_00747 =&gt; Putative S-adenosyl-L-methionine-dependent methyltransferase\nP7741_00747 & P7741_00748 =&gt; Putative S-adenosyl-L-methionine-dependent methyltransferase\nP7741_00758 & P7741_00759 =&gt; Putative S-adenosyl-L-methionine-dependent methyltransferase\nP7741_00790 & P7741_00791 =&gt; putative cutinase cut3\nP7741_00836 & P7741_00837 =&gt; Cholesterol oxidase\nP7741_00856 & P7741_00857 =&gt; Putative diacyglycerol O-acyltransferase\nP7741_00858 & P7741_00859 =&gt; Error-prone DNA polymerase\nP7741_01064 & P7741_01065 =&gt; Putative diacyglycerol O-acyltransferase\nP7741_01075 & P7741_01076 =&gt; Geranial dehydrogenase\nP7741_01127 & P7741_01128 =&gt; Nitrate/nitrite transporter NarK\nP7741_01183 & P7741_01184 =&gt; Flavin-dependent tryptophan halogenase RebH\nP7741_01266 & P7741_01267 =&gt; putative protein\nP7741_01271 & P7741_01272 =&gt; Putative diacyglycerol O-acyltransferase\nP7741_01343 & P7741_01344 =&gt; putative cobalt/nickel-exporting P-type ATPase\nP7741_01345 & P7741_01346 =&gt; Putative thioredoxin 2\nP7741_01400 & P7741_01401 =&gt; Putative acyltransferase plsB1\nP7741_01418 & P7741_01419 =&gt; putative protein\nP7741_01508 & P7741_01509 =&gt; Phenolphthiocerol synthesis polyketide synthase type I Pks15/1\nP7741_01509 & P7741_01510 =&gt; Phenolphthiocerol synthesis polyketide synthase type I Pks15/1\nP7741_01560 & P7741_01561 =&gt; Carboxylic acid reductase\nP7741_01581 & P7741_01582 =&gt; putative protein\nP7741_01582 & P7741_01583 =&gt; putative protein\nP7741_01590 & P7741_01591 =&gt; putative protein\nP7741_01591 & P7741_01592 =&gt; putative protein\nP7741_01639 & P7741_01640 =&gt; Carboxylesterase NlhH\nP7741_01663 & P7741_01664 =&gt; Putative diacyglycerol O-acyltransferase\nP7741_01668 & P7741_01669 =&gt; Esterase PE16\nP7741_01690 & P7741_01691 =&gt; Glucose-6-phosphate 1-dehydrogenase 2\nP7741_01828 & P7741_01829 =&gt; putative transport protein MmpL1\nP7741_01894 & P7741_01895 =&gt; putative protein\nP7741_02017 & P7741_02018 =&gt; putative zinc protease\nP7741_02029 & P7741_02030 =&gt; putative protein\nP7741_02030 & P7741_02031 =&gt; putative protein\nP7741_02087 & P7741_02088 =&gt; putative protein\nP7741_02088 & P7741_02089 =&gt; putative protein\nP7741_02117 & P7741_02118 =&gt; putative PPE family protein PPE47/PPE48\nP7741_02129 & P7741_02130 =&gt; Diacetylchitobiose uptake system ATP-binding protein MsiK\nP7741_02151 & P7741_02152 =&gt; Bifunctional apolipoprotein N-acyltransferase/polyprenol monophosphomannose synthase\nP7741_02176 & P7741_02177 =&gt; putative protein\nP7741_02179 & P7741_02180 =&gt; Beta-lactamase\nP7741_02180 & P7741_02181 =&gt; Beta-lactamase\nP7741_02274 & P7741_02275 =&gt; putative PPE family protein PPE51\nP7741_02323 & P7741_02324 =&gt; putative PPE family protein PPE40\nP7741_02338 & P7741_02339 =&gt; Putative flavin-containing monoamine oxidase AofH\nP7741_02372 & P7741_02373 =&gt; ATP-dependent DNA helicase Rep\nP7741_02388 & P7741_02389 =&gt; Acid phosphatase\nP7741_02390 & P7741_02391 =&gt; Putative isochorismate synthase MenF\nP7741_02413 & P7741_02414 =&gt; NADPH-dependent stearoyl-CoA 9-desaturase\nP7741_02439 & P7741_02440 =&gt; Alkane 1-monooxygenase\nP7741_02442 & P7741_02443 =&gt; putative protein\nP7741_02443 & P7741_02444 =&gt; putative protein\nP7741_02484 & P7741_02485 =&gt; D-alanine--D-alanyl carrier protein ligase\nP7741_02501 & P7741_02502 =&gt; ATP-dependent RNA helicase DeaD\nP7741_02601 & P7741_02602 =&gt; Alkane 1-monooxygenase\nP7741_02604 & P7741_02605 =&gt; Glycogen operon protein GlgX \nP7741_02643 & P7741_02644 =&gt; Phospholipase C 1\nP7741_02692 & P7741_02693 =&gt; putative protein\nP7741_02775 & P7741_02776 =&gt; putative zinc-binding alcohol dehydrogenase\nP7741_02778 & P7741_02779 =&gt; putative protein\nP7741_02820 & P7741_02821 =&gt; Lon protease\nP7741_02821 & P7741_02822 =&gt; Lon protease\nP7741_02828 & P7741_02829 =&gt; putative CoA-transferase\nP7741_02829 & P7741_02830 =&gt; putative CoA-transferase\nP7741_02886 & P7741_02887 =&gt; putative PPE family protein PPE32\nP7741_02910 & P7741_02911 =&gt; 4-alpha-glucanotransferase\nP7741_02947 & P7741_02948 =&gt; Putative cytochrome P450 143\nP7741_03010 & P7741_03011 =&gt; Serine/threonine-protein kinase PknK\nP7741_03016 & P7741_03017 =&gt; Putative succinate-semialdehyde dehydrogenase [NADP(+)] 2\nP7741_03088 & P7741_03089 =&gt; Universal stress protein\nP7741_03129 & P7741_03130 =&gt; 1-deoxy-D-xylulose-5-phosphate synthase\nP7741_03136 & P7741_03137 =&gt; putative transporter\nP7741_03138 & P7741_03139 =&gt; Fluoroquinolones export permease protein\nP7741_03140 & P7741_03141 =&gt; Fluoroquinolones export ATP-binding protein\nP7741_03144 & P7741_03145 =&gt; Trk system potassium uptake protein TrkA\nP7741_03169 & P7741_03170 =&gt; putative protein\nP7741_03177 & P7741_03178 =&gt; putative membrane protein\nP7741_03178 & P7741_03179 =&gt; putative membrane protein\nP7741_03183 & P7741_03184 =&gt; tRNA dimethylallyltransferase\nP7741_03224 & P7741_03225 =&gt; Acyl-CoA dehydrogenase FadE34"
  },
  {
    "objectID": "example_1.html#strange-bug",
    "href": "example_1.html#strange-bug",
    "title": "Example #1",
    "section": "Strange bug",
    "text": "Strange bug\n\n# With Quarto, the strange bug means that if an {r} executable block is included\n# then the preceding {bash} blocks are executed, otherwise not!\n# Simply include this and all is executed as desired."
  }
]